/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-02-17 06:54:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Bank</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1 align=\"center\">Пишите на английском.<br> (проблема в моем сервере, а не в приложении) <br> Все сделал за один день. <br> Дизайн отсутствует.</h1>\n");
      out.write("<div align=\"center\">\n");
      out.write("    <form action=\"deposit/view\" method='get'>\n");
      out.write("        <input type='submit' value='Enter to Bank' style=\"font-size: x-large; color: chartreuse; background-color: crimson\" />\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("<br />\n");
      out.write("<h2>Задание: </h2>\n");
      out.write("<br />\n");
      out.write("\n");
      out.write("<p style=\"text-indent:100px; margin: 20px\" align=\"left\" >\n");
      out.write("    Реализовать пользовательский web-интерфейс по открытию вклада в банке.\n");
      out.write("    <br><br>\n");
      out.write("    На уровне базы данных (кандидат выбираем БД на свое усмотрение) должны быть реализованы следующие сущности:\n");
      out.write("    <br>1.\tКлиенты\n");
      out.write("    <br>a.\tНаименование;\n");
      out.write("    <br>b.\tКраткое наименование;\n");
      out.write("    <br>c.\tАдрес;\n");
      out.write("    <br>d.\tОрганизационно-правовая форма (выбор из списка);\n");
      out.write("    <br>2.\tБанки\n");
      out.write("    <br>a.\tНаименование;\n");
      out.write("    <br>b.\tБИК.\n");
      out.write("    <br>3.\tВклад\n");
      out.write("    <br>a.\tКлиент(ссылка);\n");
      out.write("    <br>b.\tБанк(ссылка);\n");
      out.write("    <br>c.\tДата открытия;\n");
      out.write("    <br>d.\tПроцент;\n");
      out.write("    <br>e.\tСрок в месяцах.\n");
      out.write("    <br>Пользовательский интерфейс должен отображать общий список вкладов открытых всеми клиентами во всех банках. Должна быть возможность открыть на редактирование существующий вклад или создать новый.\n");
      out.write("\n");
      out.write("</p>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
